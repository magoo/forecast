---
scenario: 1-README-choice-unresolved # This is the scenario name. It's used to identify the forecast in the CLI, and doesn't need to be so ugly like this example. 

end_date: 2020-01-01
type: choice
options:
    "Chicago Bulls": .75        # These probabilities just need to add up to 1. 
    "New York Knicks": .20
    "Detroit Pistons": .05
    "Los Angeles Lakers": 0
                                # There's no outcome given, so the forecast is unresolved.
---

Hi! This file is the simplest example of a forecast. There are four types of forecasts:

1. `choice`: A forecast that accepts a set of options and a probability for each option.
2. `interval`: A forecast that accepts a minimum and maximum value.
3. `pert`: A forecast that accepts a minimum, maximum, and mode.
4. `lognormal`: A forecast that accepts a mean and standard deviation.

Until you add a `outcome`, the forecast is not scored.

The above section is YAML frontmatter, which needs to be formatted strictly. This is inspired by Jekyll's "front matter" feature.

Here, below the line, allows any kind of markdown. You can write the details about your forecasts here. 

This example is a forecast about the NBA Championship, structured as a `choice` that accepts some options. 

Because there is no `outcome` given in this file, the forecast is not scored yet. See the next example for a resolved forecast.

`forecast` will tell you how many days are left until the end date (or if it's overdue) instead of a brier score.

Each line in the CLI output is preceded by an x, 0, or 1.

- x means the forecast is unresolved.
- 0 means the forecast is resolved and the outcome was incorrect.
- 1 means the forecast is resolved and the outcome was correct.